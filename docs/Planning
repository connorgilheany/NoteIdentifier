Authenticated users:
	Each request includes the authorization header
	Are able to track their history & progress (scoreboard?)
	Have a permanent user ID


Unauthenticated users:
	No auth header, but the requests themselves are the exact same
	Have a user ID that is stored in a cookie. If they decide to sign up, that ID becomes their permanent id


So,

I need each request to go through middleware that logs actions for authenticated users, but not unauthenticated users


Should there be one UUID per note, or one UUID per sequence?
    -> We could store each request as a sequence, even if it's a single note (sequence of one)




Cookies:
    Each cookie is a JWT.
    Vulnerabilities:
        Session Hijacking    >NEED TLS EVERYWHERE<

    Pseudocode (very general):

    request received
1.  if the request has a cookie,
        save the userID from the cookie in the request
    if the request is a login request,
        do the login
        set a cookie with the auth JWT
    else if the request is a registration request,
        if the request has the userID attached to it (from 1),
            register the user with that id
        else
            register the user with a random id
    else if request does not have cookie header,
        add user id cookie
    then handle all other requests, getting the user ID from the variable we saved in #1
